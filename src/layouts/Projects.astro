---
import CodeIconOpen from '../components/icons/OpenCode.astro'
import CodeIconClose from '../components/icons/CloseCode.astro'
import ProjectsArray from '../data/Projects.json'
import Github from '../components/icons/Github.astro'
import ExternalLink from '../components/icons/ExternalLink.astro'
---

<section class='flex w-full scroll-mt-24 flex-col px-8 lg:px-28' id='projects'>
  <h2 class='mb-6 flex items-center justify-center gap-2 text-3xl text-white'>
    <CodeIconOpen class='size-8' />
    Projects
    <CodeIconClose class='size-8' />
  </h2>
  <article class='grid grid-cols-1 items-start gap-8 md:grid-cols-3'>
    {
      ProjectsArray.map((pro) => (
        <div class='mx-auto flex flex-col md:justify-center'>
          {pro.youtubeUrl ? (
            <button
              class='transition hover:scale-105 cursor-pointer'
              data-youtube-url={pro.youtubeUrl}
              data-title={pro.title}
              id={`video-btn-${pro.title.replace(/\s+/g, '-').toLowerCase()}`}
            >
              <img
                class='w-full rounded-xl'
                loading='lazy'
                src={pro.image}
                alt={pro.title}
                width='640'
                height='360'
              />
            </button>
          ) : (
            <a
              href={pro.externalUrl}
              target='_blank'
              class='transition hover:scale-105'
            >
              <img
                class='w-full rounded-xl'
                loading='lazy'
                src={pro.image}
                alt={pro.title}
                width='640'
                height='360'
              />
            </a>
          )}

          <div class='flex w-full flex-col px-2 pt-5'>
            <div class='flex justify-between'>
              <h3 class='text-pretty text-lg font-bold text-white lg:text-xl'>
                {pro.title}
              </h3>
              <div class='flex space-x-2'>
                {pro.github && (
                  <a
                    href={pro.github}
                    target='_blank'
                    aria-label={`Link to ${pro.title} github`}
                  >
                    <Github class='text-lochmara-800' />
                  </a>
                )}
                {pro.externalUrl && (
                  <a
                    href={pro.externalUrl}
                    target='_blank'
                    aria-label={`Link to ${pro.title} website`}
                  >
                    <ExternalLink class='text-lochmara-800' />
                  </a>
                )}
              </div>
            </div>
            <p class='text-md text-pretty text-left text-cod-gray-400 lg:text-lg'>
              {pro.description}
            </p>
          </div>
        </div>
      ))
    }
  </article>
</section>

<!-- Video Modal -->
<div id="videoModal" class="fixed inset-0 bg-black bg-opacity-75 z-50 items-center justify-center p-4" style="display: none;">
  <div class="bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-hidden">
    <div class="relative w-full" style="padding-bottom: 56.25%;">
      <iframe 
        id="videoFrame"
        class="absolute top-0 left-0 w-full h-full"
        src=""
        frameborder="0"
        allowfullscreen
      ></iframe>
    </div>
  </div>
</div>

<script>
  function openVideoModal(youtubeUrl: string, title: string) {
    const modal = document.getElementById('videoModal');
    const videoFrame = document.getElementById('videoFrame') as HTMLIFrameElement;
    
    if (modal && videoFrame) {
      videoFrame.src = youtubeUrl;
      modal.style.display = 'flex';
      document.body.style.overflow = 'hidden';
    }
  }
  
  function closeVideoModal() {
    const modal = document.getElementById('videoModal');
    const videoFrame = document.getElementById('videoFrame') as HTMLIFrameElement;
    
    if (modal && videoFrame) {
      modal.style.display = 'none';
      videoFrame.src = '';
      document.body.style.overflow = 'auto';
    }
  }
  
  // Add event listeners when DOM is loaded
  document.addEventListener('DOMContentLoaded', function() {
    // Add click listeners to all video buttons
    const videoButtons = document.querySelectorAll('[data-youtube-url]');
    videoButtons.forEach(button => {
      button.addEventListener('click', function(this: HTMLElement) {
        const youtubeUrl = this.getAttribute('data-youtube-url');
        const title = this.getAttribute('data-title');
        if (youtubeUrl && title) {
          openVideoModal(youtubeUrl, title);
        }
      });
    });
    
    // Close modal when clicking outside the video
    const modalElement = document.getElementById('videoModal');
    if (modalElement) {
      modalElement.addEventListener('click', function(e) {
        if (e.target === this) {
          closeVideoModal();
        }
      });
    }
    
    // Close modal with Escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        closeVideoModal();
      }
    });
  });
</script>
